---
title: "Canonical Correlation Analysis (CCorA)"
params:
  colsite: "burlywood4"
  colspp: "cornflowerblue"
---

```{r, results='hide', message=FALSE}
#| code-fold: true

# Paths
library(here)

# Multivariate analysis
library(ade4)
library(adegraphics)

# Matrix algebra
library(expm)

# Plots
library(ggplot2)
library(CAnetwork)
library(patchwork)
```

```{r}
#| code-fold: true

# Define bound for comparison to zero
zero <- 10e-10
```

## Introduction

Canonical correlation analysis is a symmetrical analysis to examine the link between 2 matrices $Y_R$ and $Y_C$. It is intended to analyze quantitative continuous data: but here, we use it to analyze count data from inflated matrices.

Here, we will analyze matrix $Y$, representing the occurrences of species in sites:

```{r, echo = FALSE, message = FALSE}
#| code-fold: true

dat <- readRDS(here("data/Barbaro2012.rds"))
Y <- dat$comm

r <- dim(Y)[1]
c <- dim(Y)[2]

plotmat(r = r, c = c)
```

## Inflate matrices

We compute the inflated tables $R$ ($n_\bar{0} \times r$) and $C$ ($n_\bar{0} \times c$) from $Y$ ($r \times c$).

```{r}
# Transform matrix to count table
Yfreq <- as.data.frame(as.table(Y))
colnames(Yfreq) <- c("row", "col", "Freq")

# Remove the cells with no observation
Yfreq0 <- Yfreq[-which(Yfreq$Freq == 0),]
Yfreq0$colind <- match(Yfreq0$col, colnames(Y)) # match index and species names

# Create indicator tables
YR <- acm.disjonctif(as.data.frame(Yfreq0$row))
colnames(YR) <- rownames(Y)
YR <- as.matrix(YR)
YC <- acm.disjonctif(as.data.frame(Yfreq0$col))
colnames(YC) <- colnames(Y)
YC <- as.matrix(YC)
```

## Classical canonical correlation analysis

We perform CCorA with the R function:

```{r}
cancorRC <- cancor(YR,
                   YC,
                   xcenter = FALSE, ycenter = FALSE)

```

Now, we do it by hand. First, we compute matrix 
$$K = {S_{RR}^\top}^{-1/2} S_{RC} {S_{CC}^\top}^{-1/2}$$
Where $S_{AB}$ is the variance covariance matrix of matrices $A$ and $B$.

```{r}
SRR <- t(YR) %*% YR
SRC <- t(YR) %*% YC
SCC <- t(YC) %*% YC

K <- solve(chol(t(SRR))) %*% SRC %*% solve(chol(SCC)) 

svdK <- svd(K)
```

Compare singular values to canonical correlations:

```{r}
all((svdK$d/cancorRC$cor - 1) < zero)
```

Then, we compute canonical coefficients:

```{r}
# Canonical coefficients
xcoefK <- solve(chol(SRR)) %*% svdK$u
ycoefK <- solve(chol(t(SCC))) %*% svdK$v

all(abs(abs(xcoefK/cancorRC$xcoef[, 1:21]) - 1) < zero)
all(abs(abs(ycoefK/cancorRC$ycoef) - 1) < zero)
```

And the canonical variates:

```{r}
# Canonical variates
scoreRK <- YR %*% xcoefK
scoreCK <- YC %*% ycoefK

scoreR <- YR %*% cancorRC$xcoef
scoreC <- YC %*% cancorRC$ycoef

all(abs(abs(scoreRK/scoreR[, 1:21]) - 1) < zero)
all(abs(abs(scoreCK/scoreC) - 1) < zero)
```


## Weighted canonical correlation analysis

```{r}
# Get weights
wt <- Yfreq0$Freq
Dw <- diag(wt)
```

First, we scale the matrices with custom weights:

```{r}
# Center tables
YR_scaled <- diag(sqrt(wt)) %*% scalewt(YR, wt, 
                                        scale = FALSE)
YC_scaled <- diag(sqrt(wt)) %*% scalewt(YC, wt, 
                                        scale = FALSE)
```

Now, we try to perform a weighted version.

```{r}
cancorRC <- cancor(YR_scaled, 
                   YC_scaled, 
                   xcenter = FALSE, ycenter = FALSE)
```

Now, we do it by hand. First, we compute matrix $K$:

```{r}
SRR <- t(YR_scaled) %*% YR_scaled
SRC <- t(YR_scaled) %*% YC_scaled
SCC <- t(YC_scaled) %*% YC_scaled

# K <- solve(chol(t(SRR))) %*% SRC %*% solve(chol(SCC))
K <- solve(sqrtm(t(SRR))) %*% SRC %*% solve(sqrtm(SCC)) 

svdK <- svd(K)
```

Compare singular values to canonical correlations:

```{r}
all((svdK$d/cancorRC$cor[1:21] - 1) < zero)
```

Then, we compute canonical coefficients:

```{r}
# Canonical coefficients
xcoefK <- solve(sqrtm(SRR)) %*% svdK$u
ycoefK <- solve(chol(t(SCC))) %*% svdK$v

all(abs(abs(xcoefK[1:25, ]/cancorRC$xcoef[, 1:21]) - 1) < zero)
all(abs(abs(ycoefK[1:20, 1:20]/cancorRC$ycoef) - 1) < zero)
```